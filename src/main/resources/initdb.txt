CREATE DATABASE filmmanager
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1;



CREATE SCHEMA filmmanager
    AUTHORIZATION postgres;


	
CREATE SEQUENCE filmmanager.actors_actor_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE filmmanager.actors_actor_id_seq
    OWNER TO postgres;
	
	
CREATE SEQUENCE filmmanager.categories_category_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE filmmanager.categories_category_id_seq
    OWNER TO postgres;
	
	
CREATE SEQUENCE filmmanager.films_film_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE filmmanager.films_film_id_seq
    OWNER TO postgres;
	
	
CREATE SEQUENCE filmmanager.hibernate_sequence
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE filmmanager.hibernate_sequence
    OWNER TO postgres;
	
	
CREATE SEQUENCE filmmanager.languages_language_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE filmmanager.languages_language_id_seq
    OWNER TO postgres;
	
	
CREATE TABLE filmmanager.languages
(
    language_id bigint NOT NULL DEFAULT nextval('filmmanager.languages_language_id_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT language_pkey PRIMARY KEY (language_id),
    CONSTRAINT name UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE filmmanager.languages
    OWNER to postgres;


CREATE TABLE filmmanager.actors
(
    actor_id bigint NOT NULL DEFAULT nextval('filmmanager.actors_actor_id_seq'::regclass),
    first_name text COLLATE pg_catalog."default" NOT NULL,
    last_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT actors_pkey PRIMARY KEY (actor_id)
)

TABLESPACE pg_default;

ALTER TABLE filmmanager.actors
    OWNER to postgres;


CREATE TABLE filmmanager.categories
(
    category_id bigint NOT NULL DEFAULT nextval('filmmanager.categories_category_id_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categories_pk PRIMARY KEY (category_id),
    CONSTRAINT categories_un UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE filmmanager.categories
    OWNER to postgres;

	
CREATE TABLE filmmanager.films
(
    film_id bigint NOT NULL DEFAULT nextval('filmmanager.films_film_id_seq'::regclass),
    title text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    release_year integer,
    language_id bigint NOT NULL,
    rental_duration integer,
    rental_rate real,
    length integer,
    replacement_cost real,
    rating text COLLATE pg_catalog."default",
    special_features text COLLATE pg_catalog."default",
    fulltext text COLLATE pg_catalog."default",
    CONSTRAINT films_pkey PRIMARY KEY (film_id),
    CONSTRAINT films_language_id_fkey FOREIGN KEY (language_id)
        REFERENCES filmmanager.languages (language_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE filmmanager.films
    OWNER to postgres;
	
CREATE TABLE filmmanager.films_actors
(
    film_id bigint NOT NULL,
    actor_id bigint NOT NULL,
    CONSTRAINT films_actors_pkey PRIMARY KEY (film_id, actor_id),
    CONSTRAINT actors_fk FOREIGN KEY (actor_id)
        REFERENCES filmmanager.actors (actor_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT films_actors_film_id_fkey FOREIGN KEY (film_id)
        REFERENCES filmmanager.films (film_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE filmmanager.films_actors
    OWNER to postgres;
	
	
CREATE TABLE filmmanager.films_categories
(
    film_id bigint NOT NULL,
    category_id bigint NOT NULL,
    CONSTRAINT films_categories_pkey PRIMARY KEY (category_id, film_id),
    CONSTRAINT category_fk FOREIGN KEY (category_id)
        REFERENCES filmmanager.categories (category_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT films_categories_film_id_fkey FOREIGN KEY (film_id)
        REFERENCES filmmanager.films (film_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE filmmanager.films_categories
    OWNER to postgres;
	
	

	
